<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="fGetTimeOfNoon" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION fGetTimeOfNoon : TOD
VAR_INPUT
   day   : USINT;
   month : USINT;
END_VAR
VAR
// All times in UTC for Kassel (Latitude: 51.31; Longitude: 9.48)// Each month has 31 days in this array. Days > number of days in this month contain the value of the last day of month// Function created with: https://github.com/otti/SunRiseSunSetnoon : ARRAY[1..12] OF ARRAY[1..31] OF TOD :=    [      //         01            02            03            04            05            06            07            08            09            10            11            12            13            14            15            16            17            18            19            20            21            22            23            24            25            26            27            28            29            30            31                  [TOD#11:25:17, TOD#11:25:45, TOD#11:26:13, TOD#11:26:41, TOD#11:27:08, TOD#11:27:35, TOD#11:28:01, TOD#11:28:27, TOD#11:28:52, TOD#11:29:17, TOD#11:29:41, TOD#11:30:05, TOD#11:30:28, TOD#11:30:51, TOD#11:31:13, TOD#11:31:34, TOD#11:31:54, TOD#11:32:14, TOD#11:32:34, TOD#11:32:52, TOD#11:33:10, TOD#11:33:27, TOD#11:33:43, TOD#11:33:58, TOD#11:34:13, TOD#11:34:27, TOD#11:34:40, TOD#11:34:52, TOD#11:35:04, TOD#11:35:14, TOD#11:35:24], //Jan      [TOD#11:35:33, TOD#11:35:41, TOD#11:35:49, TOD#11:35:55, TOD#11:36:01, TOD#11:36:06, TOD#11:36:10, TOD#11:36:13, TOD#11:36:16, TOD#11:36:17, TOD#11:36:18, TOD#11:36:18, TOD#11:36:17, TOD#11:36:16, TOD#11:36:14, TOD#11:36:11, TOD#11:36:07, TOD#11:36:03, TOD#11:35:58, TOD#11:35:52, TOD#11:35:46, TOD#11:35:39, TOD#11:35:31, TOD#11:35:23, TOD#11:35:14, TOD#11:35:04, TOD#11:34:54, TOD#11:34:43, TOD#11:34:43, TOD#11:34:43, TOD#11:34:43], //Feb      [TOD#11:34:32, TOD#11:34:21, TOD#11:34:08, TOD#11:33:56, TOD#11:33:43, TOD#11:33:29, TOD#11:33:15, TOD#11:33:01, TOD#11:32:46, TOD#11:32:31, TOD#11:32:15, TOD#11:31:59, TOD#11:31:43, TOD#11:31:27, TOD#11:31:10, TOD#11:30:54, TOD#11:30:36, TOD#11:30:19, TOD#11:30:02, TOD#11:29:44, TOD#11:29:26, TOD#11:29:09, TOD#11:28:51, TOD#11:28:33, TOD#11:28:14, TOD#11:27:56, TOD#11:27:38, TOD#11:27:20, TOD#11:27:02, TOD#11:26:44, TOD#11:26:26], //Mar      [TOD#11:26:08, TOD#11:25:50, TOD#11:25:33, TOD#11:25:15, TOD#11:24:58, TOD#11:24:41, TOD#11:24:24, TOD#11:24:07, TOD#11:23:50, TOD#11:23:34, TOD#11:23:18, TOD#11:23:02, TOD#11:22:47, TOD#11:22:32, TOD#11:22:17, TOD#11:22:02, TOD#11:21:48, TOD#11:21:35, TOD#11:21:21, TOD#11:21:08, TOD#11:20:56, TOD#11:20:44, TOD#11:20:32, TOD#11:20:21, TOD#11:20:10, TOD#11:20:00, TOD#11:19:50, TOD#11:19:41, TOD#11:19:32, TOD#11:19:24, TOD#11:19:24], //Apr      [TOD#11:19:16, TOD#11:19:09, TOD#11:19:02, TOD#11:18:56, TOD#11:18:50, TOD#11:18:45, TOD#11:18:41, TOD#11:18:37, TOD#11:18:34, TOD#11:18:31, TOD#11:18:29, TOD#11:18:27, TOD#11:18:26, TOD#11:18:26, TOD#11:18:26, TOD#11:18:26, TOD#11:18:28, TOD#11:18:29, TOD#11:18:32, TOD#11:18:35, TOD#11:18:38, TOD#11:18:42, TOD#11:18:46, TOD#11:18:52, TOD#11:18:57, TOD#11:19:03, TOD#11:19:10, TOD#11:19:17, TOD#11:19:24, TOD#11:19:32, TOD#11:19:40], //May      [TOD#11:19:49, TOD#11:19:58, TOD#11:20:08, TOD#11:20:18, TOD#11:20:28, TOD#11:20:38, TOD#11:20:49, TOD#11:21:00, TOD#11:21:12, TOD#11:21:24, TOD#11:21:36, TOD#11:21:48, TOD#11:22:00, TOD#11:22:13, TOD#11:22:25, TOD#11:22:38, TOD#11:22:51, TOD#11:23:04, TOD#11:23:17, TOD#11:23:30, TOD#11:23:43, TOD#11:23:56, TOD#11:24:09, TOD#11:24:22, TOD#11:24:35, TOD#11:24:48, TOD#11:25:00, TOD#11:25:13, TOD#11:25:25, TOD#11:25:37, TOD#11:25:37], //Jun      [TOD#11:25:49, TOD#11:26:01, TOD#11:26:12, TOD#11:26:23, TOD#11:26:34, TOD#11:26:44, TOD#11:26:54, TOD#11:27:04, TOD#11:27:13, TOD#11:27:22, TOD#11:27:31, TOD#11:27:39, TOD#11:27:46, TOD#11:27:53, TOD#11:28:00, TOD#11:28:06, TOD#11:28:12, TOD#11:28:17, TOD#11:28:21, TOD#11:28:25, TOD#11:28:29, TOD#11:28:32, TOD#11:28:34, TOD#11:28:36, TOD#11:28:37, TOD#11:28:38, TOD#11:28:38, TOD#11:28:37, TOD#11:28:36, TOD#11:28:34, TOD#11:28:31], //Jul      [TOD#11:28:28, TOD#11:28:25, TOD#11:28:21, TOD#11:28:16, TOD#11:28:10, TOD#11:28:04, TOD#11:27:57, TOD#11:27:50, TOD#11:27:42, TOD#11:27:34, TOD#11:27:25, TOD#11:27:15, TOD#11:27:05, TOD#11:26:54, TOD#11:26:43, TOD#11:26:31, TOD#11:26:19, TOD#11:26:06, TOD#11:25:53, TOD#11:25:39, TOD#11:25:25, TOD#11:25:10, TOD#11:24:55, TOD#11:24:39, TOD#11:24:23, TOD#11:24:07, TOD#11:23:50, TOD#11:23:33, TOD#11:23:15, TOD#11:22:57, TOD#11:22:39], //Aug      [TOD#11:22:20, TOD#11:22:01, TOD#11:21:42, TOD#11:21:22, TOD#11:21:02, TOD#11:20:42, TOD#11:20:22, TOD#11:20:02, TOD#11:19:41, TOD#11:19:20, TOD#11:18:59, TOD#11:18:38, TOD#11:18:17, TOD#11:17:56, TOD#11:17:35, TOD#11:17:13, TOD#11:16:52, TOD#11:16:30, TOD#11:16:09, TOD#11:15:48, TOD#11:15:26, TOD#11:15:05, TOD#11:14:44, TOD#11:14:23, TOD#11:14:02, TOD#11:13:41, TOD#11:13:20, TOD#11:13:00, TOD#11:12:39, TOD#11:12:19, TOD#11:12:19], //Sep      [TOD#11:12:00, TOD#11:11:40, TOD#11:11:21, TOD#11:11:02, TOD#11:10:43, TOD#11:10:25, TOD#11:10:07, TOD#11:09:50, TOD#11:09:33, TOD#11:09:16, TOD#11:09:00, TOD#11:08:44, TOD#11:08:29, TOD#11:08:14, TOD#11:08:00, TOD#11:07:47, TOD#11:07:34, TOD#11:07:21, TOD#11:07:09, TOD#11:06:58, TOD#11:06:47, TOD#11:06:37, TOD#11:06:28, TOD#11:06:20, TOD#11:06:12, TOD#11:06:05, TOD#11:05:58, TOD#11:05:53, TOD#11:05:48, TOD#11:05:44, TOD#11:05:40], //Okt      [TOD#11:05:38, TOD#11:05:36, TOD#11:05:35, TOD#11:05:35, TOD#11:05:36, TOD#11:05:37, TOD#11:05:40, TOD#11:05:43, TOD#11:05:47, TOD#11:05:52, TOD#11:05:58, TOD#11:06:05, TOD#11:06:12, TOD#11:06:21, TOD#11:06:30, TOD#11:06:40, TOD#11:06:51, TOD#11:07:03, TOD#11:07:16, TOD#11:07:29, TOD#11:07:43, TOD#11:07:59, TOD#11:08:14, TOD#11:08:31, TOD#11:08:49, TOD#11:09:07, TOD#11:09:26, TOD#11:09:46, TOD#11:10:06, TOD#11:10:27, TOD#11:10:27], //Nov      [TOD#11:10:49, TOD#11:11:11, TOD#11:11:34, TOD#11:11:58, TOD#11:12:22, TOD#11:12:47, TOD#11:13:12, TOD#11:13:38, TOD#11:14:05, TOD#11:14:31, TOD#11:14:58, TOD#11:15:26, TOD#11:15:54, TOD#11:16:22, TOD#11:16:51, TOD#11:17:19, TOD#11:17:49, TOD#11:18:18, TOD#11:18:47, TOD#11:19:17, TOD#11:19:46, TOD#11:20:16, TOD#11:20:46, TOD#11:21:16, TOD#11:21:45, TOD#11:22:15, TOD#11:22:45, TOD#11:23:14, TOD#11:23:43, TOD#11:24:12, TOD#11:24:41]  //Dez   ];
END_VAR
]]></Declaration>
    <Implementation>
      <ST>
IF (day   > 31) OR (day   = 0) THEN day   := 1; END_IF
IF (month > 12) OR (month = 0) THEN month := 1; END_IF


fGetTimeOfNoon := noon[month][day];
</ST>
    </Implementation>
  </POU>
</TcPlcObject>